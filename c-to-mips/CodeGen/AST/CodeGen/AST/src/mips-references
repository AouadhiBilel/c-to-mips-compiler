	.text
	.align 2
	.globl main
	.ent main
	.type main,@function

main:
		j 		f


f:
		addiu	$t0,$0,5
		add 	$t0,$t0,$t0
		move 	$v0,$t0
		j 		$31
		nop

		.end 	main



return a+b; -> use $vo ,is return a+b;

codeGen:

test for 4 operations

ADD
SUB
MULT
DIV

ADD:

int a; 				- VARIABLE clan, look at init declarator clan
int a = 3 + b;       - hohohohoho clan
int a = b + 3;        - hohohohoho clan
int a = 3 + b + 1 + 2 + 3 + 5; - hohohoho clan
a = 3 + 2 + b;    - testing clan
a *= 3;           - testing clanin

add $t0,$1,$3
add $t0,$t0,$t1


NOTE: all register values are local to the function call

for the codegen deadline, this is the most complex: - all well formed

int f(int a,int b){
	a = 3 + 2*5;
	b = a + 5;
	int c = a + b;
	int e,f,g,h,i;
	return c;
}

1. take everything after '=' sign and combine it
	Example:
	3 + 2*3 can be resolved into 9 ( need to consider binding strength, 3+2 or 2*3 first?)



Hacks done that need to be reversed for compiler deadline:
1. Function parameters and local function variables are declared in the same scope space, can't just mips32.clear() after function declaration
